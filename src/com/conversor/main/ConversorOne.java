/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.conversor.main;

import com.conversor.modelo.Conversiones;
import java.awt.Component;
import java.awt.Toolkit;
import javax.swing.JOptionPane;

/**
 *
 * @author corde
 */
public class ConversorOne extends javax.swing.JFrame {

    /**
     * Creates new form ConversorOne
     */
    public ConversorOne() {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(ConversorOne.class.getResource("/com/conversor/imagenes/logo2.png")));
        this.setLocationRelativeTo(null); 
		this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jComboBox4 = new javax.swing.JComboBox<>();
        jComboBox5 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Conversor ONE");
        setBackground(new java.awt.Color(255, 51, 51));

        jPanel1.setBackground(new java.awt.Color(255, 230, 230));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/conversor/imagenes/fondo.png"))); // NOI18N
        jLabel1.setLabelFor(this);
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 30));

        jComboBox1.setBackground(new java.awt.Color(255, 230, 230));
        jComboBox1.setForeground(new java.awt.Color(102, 102, 0));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Conversor de temperatura", "Conversor de divisas" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 60, 190, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/conversor/imagenes/fondo.png"))); // NOI18N
        jLabel2.setLabelFor(this);
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 370, 600, 30));

        jTextField1.setBackground(new java.awt.Color(255, 204, 204));
        jTextField1.setForeground(new java.awt.Color(102, 102, 0));
        jTextField1.setText("Ingrese la cantidad...");
        jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField1MouseClicked(evt);
            }
        });
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, 160, 30));

        jComboBox4.setBackground(new java.awt.Color(255, 230, 230));
        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fahrenheit", "Kelvin" }));
        jPanel1.add(jComboBox4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 160, -1));

        jComboBox5.setBackground(new java.awt.Color(255, 230, 230));
        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Celsius", "Fahrenheit", "Kelvin" }));
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 160, -1));

        jButton1.setBackground(new java.awt.Color(255, 230, 230));
        jButton1.setForeground(new java.awt.Color(102, 102, 0));
        jButton1.setText("Ok");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 80, -1));

        jButton2.setBackground(new java.awt.Color(255, 230, 230));
        jButton2.setForeground(new java.awt.Color(102, 102, 0));
        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 300, 80, -1));

        jLabel3.setText("Seleccione una opción de conversión");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 30, 220, 30));

        jLabel4.setText("Seleccione el tipo de divisa");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 150, 20));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/conversor/imagenes/logo3.png"))); // NOI18N
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 290, 130, 70));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
  
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        if(jComboBox1.getSelectedItem() == "Conversor de divisas"){
            jComboBox5.removeAllItems();
            jComboBox5.addItem("Peso Mexicano");
            jComboBox5.addItem("Dólar");
            jComboBox5.addItem("Euro");
            jComboBox5.addItem("Libra Esterlina");
            jComboBox5.addItem("Yen Japonés");
            jComboBox5.addItem("Won Surcoreano");
            jComboBox4.removeAllItems();
            jComboBox4.addItem("Dólar");
            jComboBox4.addItem("Euro");
            jComboBox4.addItem("Libra Esterlina");
            jComboBox4.addItem("Yen Japonés");
            jComboBox4.addItem("Won Surcoreano");         
        }else if(jComboBox1.getSelectedItem() == "Conversor de temperatura"){
            jComboBox5.removeAllItems();
            jComboBox5.addItem("Celsius");
            jComboBox5.addItem("Fahrenheit");
            jComboBox5.addItem("Kelvin");
            jComboBox4.removeAllItems();
            jComboBox4.addItem("Fahrenheit");
            jComboBox4.addItem("Kelvin");   
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
        // TODO add your handling code here:
        if (jComboBox5.getSelectedItem() == "Peso Mexicano"){
            jComboBox4.removeAllItems();
            jComboBox4.addItem("Dólar");
            jComboBox4.addItem("Euro");
            jComboBox4.addItem("Libra Esterlina");
            jComboBox4.addItem("Yen Japonés");
            jComboBox4.addItem("Won Surcoreano");
        }else if(jComboBox5.getSelectedItem() == "Dólar" || jComboBox5.getSelectedItem() == "Euro" || 
                jComboBox5.getSelectedItem() == "Libra Esterlina" || jComboBox5.getSelectedItem() == "Yen Japonés" ||
                jComboBox5.getSelectedItem() == "Won Surcoreano" ){
            
                jComboBox4.removeAllItems();
                jComboBox4.addItem("Peso Mexicano");
        }
        
        if (jComboBox5.getSelectedItem() == "Celsius"){
            jComboBox4.removeAllItems();
            jComboBox4.addItem("Fahrenheit");
            jComboBox4.addItem("Kelvin");   
        }else if(jComboBox5.getSelectedItem() == "Fahrenheit"){
            jComboBox4.removeAllItems();
            jComboBox4.addItem("Celsius");
            jComboBox4.addItem("Kelvin"); 
        }else if(jComboBox5.getSelectedItem() == "Kelvin"){
            jComboBox4.removeAllItems();
            jComboBox4.addItem("Celsius");
            jComboBox4.addItem("Fahrenheit");
        }     
    }//GEN-LAST:event_jComboBox5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // BOTON OK
        Conversiones uno = new Conversiones();
        
        String bandera;
        double valor = 0;
        String opcion1 = (String)jComboBox1.getSelectedItem();
        String opcion2 = (String)jComboBox5.getSelectedItem();
        String opcion3 = (String)jComboBox4.getSelectedItem();
        
        switch(opcion1){
            case "Conversor de divisas" -> {
                
                switch(opcion2){
                    case "Peso Mexicano" ->{
                        
                        switch(opcion3){
                            case "Dólar" ->{
                                try {
                                    valor = Double.parseDouble(jTextField1.getText());
                                    bandera = "continuar";
                                }catch(NumberFormatException ex) {	
                                    JOptionPane.showMessageDialog(null, "Por favor ingrese datos validos", "alert", JOptionPane.ERROR_MESSAGE);
                                    jTextField1.setText(null);
                                    jTextField1.requestFocus();           
                                    bandera = "repite";
                                }
                                if("continuar".equals(bandera)){
                                    Component frame = null;
                                    JOptionPane.showInternalMessageDialog(frame, "Tienes: " + uno.pesoDolar(valor) + " Dolares" ,
                                    "information", JOptionPane.INFORMATION_MESSAGE);
                                    
                                    int aux = JOptionPane.showInternalConfirmDialog(frame,
                                            "¿Desea continuar usando el conversor?", "information",JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);

                                    if(aux == 1 || aux == 2 ) {
                                        JOptionPane.showInternalMessageDialog(frame, "Programa finalizado",
                                                "information", JOptionPane.INFORMATION_MESSAGE);
                                        System.exit(0); 	
                                    }else{
                                        jTextField1.setText(null);
                                        jTextField1.requestFocus(); 
                                    }   
                                }
                                break;
                            }
                            case "Euro" -> {
                                try {
                                    valor = Double.parseDouble(jTextField1.getText());
                                    bandera = "continuar";
                                }catch(NumberFormatException ex) {	
                                    JOptionPane.showMessageDialog(null, "Por favor ingrese datos validos", "alert", JOptionPane.ERROR_MESSAGE);
                                    jTextField1.setText(null);
                                    jTextField1.requestFocus();           
                                    bandera = "repite";
                                }
                                if("continuar".equals(bandera)){
                                    Component frame = null;
                                    JOptionPane.showInternalMessageDialog(frame, "Tienes: " + uno.pesoEuro(valor) + " Euros" ,
                                    "information", JOptionPane.INFORMATION_MESSAGE);

                                    int aux = JOptionPane.showInternalConfirmDialog(frame,
                                            "¿Desea continuar usando el conversor?", "information",JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);

                                    if(aux == 1 || aux == 2 ) {
                                        JOptionPane.showInternalMessageDialog(frame, "Programa finalizado",
                                                "information", JOptionPane.INFORMATION_MESSAGE);
                                        System.exit(0); 	
                                    }else{
                                        jTextField1.setText(null);
                                        jTextField1.requestFocus(); 
                                    }   
                                }
                                break;                             
                            }
                            case "Libra Esterlina" -> {
                                try {
                                    valor = Double.parseDouble(jTextField1.getText());
                                    bandera = "continuar";
                                }catch(NumberFormatException ex) {	
                                    JOptionPane.showMessageDialog(null, "Por favor ingrese datos validos", "alert", JOptionPane.ERROR_MESSAGE);
                                    jTextField1.setText(null);
                                    jTextField1.requestFocus();           
                                    bandera = "repite";
                                }
                                if("continuar".equals(bandera)){
                                    Component frame = null;
                                    JOptionPane.showInternalMessageDialog(frame, "Tienes: " + uno.pesoLibra(valor) + " Libras Esterlinas" ,
                                    "information", JOptionPane.INFORMATION_MESSAGE);

                                    int aux = JOptionPane.showInternalConfirmDialog(frame,
                                            "¿Desea continuar usando el conversor?", "information",JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);

                                    if(aux == 1 || aux == 2 ) {
                                        JOptionPane.showInternalMessageDialog(frame, "Programa finalizado",
                                                "information", JOptionPane.INFORMATION_MESSAGE);
                                        System.exit(0); 	
                                    }else{
                                        jTextField1.setText(null);
                                        jTextField1.requestFocus(); 
                                    }   
                                }
                                break;  
                            }
                            case "Yen Japonés" -> {
                                try {
                                    valor = Double.parseDouble(jTextField1.getText());
                                    bandera = "continuar";
                                }catch(NumberFormatException ex) {	
                                    JOptionPane.showMessageDialog(null, "Por favor ingrese datos validos", "alert", JOptionPane.ERROR_MESSAGE);
                                    jTextField1.setText(null);
                                    jTextField1.requestFocus();           
                                    bandera = "repite";
                                }
                                if("continuar".equals(bandera)){
                                    Component frame = null;
                                    JOptionPane.showInternalMessageDialog(frame, "Tienes: " + uno.pesoYen(valor) + " Yenes Japonés" ,
                                    "information", JOptionPane.INFORMATION_MESSAGE);

                                    int aux = JOptionPane.showInternalConfirmDialog(frame,
                                            "¿Desea continuar usando el conversor?", "information",JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);

                                    if(aux == 1 || aux == 2 ) {
                                        JOptionPane.showInternalMessageDialog(frame, "Programa finalizado",
                                                "information", JOptionPane.INFORMATION_MESSAGE);
                                        System.exit(0); 	
                                    }else{
                                        jTextField1.setText(null);
                                        jTextField1.requestFocus(); 
                                    }   
                                }
                                break;  
                            }
                            case "Won Surcoreano" -> {
                                try {
                                    valor = Double.parseDouble(jTextField1.getText());
                                    bandera = "continuar";
                                }catch(NumberFormatException ex) {	
                                    JOptionPane.showMessageDialog(null, "Por favor ingrese datos validos", "alert", JOptionPane.ERROR_MESSAGE);
                                    jTextField1.setText(null);
                                    jTextField1.requestFocus();           
                                    bandera = "repite";
                                }
                                if("continuar".equals(bandera)){
                                    Component frame = null;
                                    JOptionPane.showInternalMessageDialog(frame, "Tienes: " + uno.pesoWon(valor) + " Wons Surcoreanos" ,
                                    "information", JOptionPane.INFORMATION_MESSAGE);

                                    int aux = JOptionPane.showInternalConfirmDialog(frame,
                                            "¿Desea continuar usando el conversor?", "information",JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);

                                    if(aux == 1 || aux == 2 ) {
                                        JOptionPane.showInternalMessageDialog(frame, "Programa finalizado",
                                                "information", JOptionPane.INFORMATION_MESSAGE);
                                        System.exit(0); 	
                                    }else{
                                        jTextField1.setText(null);
                                        jTextField1.requestFocus(); 
                                    }   
                                }
                                break;  
                            }
                        }    
                    }
                    case "Dólar" -> {
                        try {
                            valor = Double.parseDouble(jTextField1.getText());
                            bandera = "continuar";
                        }catch(NumberFormatException ex) {	
                            JOptionPane.showMessageDialog(null, "Por favor ingrese datos validos", "alert", JOptionPane.ERROR_MESSAGE);
                            jTextField1.setText(null);
                            jTextField1.requestFocus();           
                            bandera = "repite";
                        }
                        if("continuar".equals(bandera)){
                            Component frame = null;
                            JOptionPane.showInternalMessageDialog(frame, "Tienes: " + uno.dolarPeso(valor) + " Pesos Mexicanos" ,
                            "information", JOptionPane.INFORMATION_MESSAGE);

                            int aux = JOptionPane.showInternalConfirmDialog(frame,
                                            "¿Desea continuar usando el conversor?", "information",JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);

                                    if(aux == 1 || aux == 2 ) {
                                JOptionPane.showInternalMessageDialog(frame, "Programa finalizado",
                                        "information", JOptionPane.INFORMATION_MESSAGE);
                                System.exit(0); 	
                            }else{
                                jTextField1.setText(null);
                                jTextField1.requestFocus(); 
                            }   
                        }
                        break;     
                    }
                    case "Euro" -> {
                        try {
                            valor = Double.parseDouble(jTextField1.getText());
                            bandera = "continuar";
                        }catch(NumberFormatException ex) {	
                            JOptionPane.showMessageDialog(null, "Por favor ingrese datos validos", "alert", JOptionPane.ERROR_MESSAGE);
                            jTextField1.setText(null);
                            jTextField1.requestFocus();           
                            bandera = "repite";
                        }
                        if("continuar".equals(bandera)){
                            Component frame = null;
                            JOptionPane.showInternalMessageDialog(frame, "Tienes: " + uno.euroPeso(valor) + " Pesos Mexicanos" ,
                            "information", JOptionPane.INFORMATION_MESSAGE);

                            int aux = JOptionPane.showInternalConfirmDialog(frame,"¿Desea continuar usando el conversor?", "information",
                                    JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);

                                if(aux == 1 || aux == 2 ) {
                                JOptionPane.showInternalMessageDialog(frame, "Programa finalizado",
                                        "information", JOptionPane.INFORMATION_MESSAGE);
                                System.exit(0); 	
                            }else{
                                jTextField1.setText(null);
                                jTextField1.requestFocus(); 
                            }   
                        }
                        break;     
                    }
                    case "Libra Esterlina" -> {
                        try {
                            valor = Double.parseDouble(jTextField1.getText());
                            bandera = "continuar";
                        }catch(NumberFormatException ex) {	
                            JOptionPane.showMessageDialog(null, "Por favor ingrese datos validos", "alert", JOptionPane.ERROR_MESSAGE);
                            jTextField1.setText(null);
                            jTextField1.requestFocus();           
                            bandera = "repite";
                        }
                        if("continuar".equals(bandera)){
                            Component frame = null;
                            JOptionPane.showInternalMessageDialog(frame, "Tienes: " + uno.libraPeso(valor) + " Pesos Mexicanos" ,
                            "information", JOptionPane.INFORMATION_MESSAGE);

                            int aux = JOptionPane.showInternalConfirmDialog(frame,"¿Desea continuar usando el conversor?", "information",
                                    JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);

                                if(aux == 1 || aux == 2 ) {
                                JOptionPane.showInternalMessageDialog(frame, "Programa finalizado",
                                        "information", JOptionPane.INFORMATION_MESSAGE);
                                System.exit(0); 	
                            }else{
                                jTextField1.setText(null);
                                jTextField1.requestFocus(); 
                            }   
                        }
                        break;     
                    }
                    case "Yen Japonés" -> {
                        try {
                            valor = Double.parseDouble(jTextField1.getText());
                            bandera = "continuar";
                        }catch(NumberFormatException ex) {	
                            JOptionPane.showMessageDialog(null, "Por favor ingrese datos validos", "alert", JOptionPane.ERROR_MESSAGE);
                            jTextField1.setText(null);
                            jTextField1.requestFocus();           
                            bandera = "repite";
                        }
                        if("continuar".equals(bandera)){
                            Component frame = null;
                            JOptionPane.showInternalMessageDialog(frame, "Tienes: " + uno.yenPeso(valor) + " Pesos Mexicanos" ,
                            "information", JOptionPane.INFORMATION_MESSAGE);

                            int aux = JOptionPane.showInternalConfirmDialog(frame,"¿Desea continuar usando el conversor?", "information",
                                    JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);

                                if(aux == 1 || aux == 2 ) {
                                JOptionPane.showInternalMessageDialog(frame, "Programa finalizado",
                                        "information", JOptionPane.INFORMATION_MESSAGE);
                                System.exit(0); 	
                            }else{
                                jTextField1.setText(null);
                                jTextField1.requestFocus(); 
                            }   
                        }
                        break;     
                    }
                    case "Won Surcoreano" -> {
                        try {
                            valor = Double.parseDouble(jTextField1.getText());
                            bandera = "continuar";
                        }catch(NumberFormatException ex) {	
                            JOptionPane.showMessageDialog(null, "Por favor ingrese datos validos", "alert", JOptionPane.ERROR_MESSAGE);
                            jTextField1.setText(null);
                            jTextField1.requestFocus();           
                            bandera = "repite";
                        }
                        if("continuar".equals(bandera)){
                            Component frame = null;
                            JOptionPane.showInternalMessageDialog(frame, "Tienes: " + uno.wonPeso(valor) + " Pesos Mexicanos" ,
                            "information", JOptionPane.INFORMATION_MESSAGE);

                            int aux = JOptionPane.showInternalConfirmDialog(frame,"¿Desea continuar usando el conversor?", "information",
                                    JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);

                                if(aux == 1 || aux == 2 ) {
                                JOptionPane.showInternalMessageDialog(frame, "Programa finalizado",
                                        "information", JOptionPane.INFORMATION_MESSAGE);
                                System.exit(0); 	
                            }else{
                                jTextField1.setText(null);
                                jTextField1.requestFocus(); 
                            }   
                        }
                        break;     
                    }
                }
                break;
            }
            case "Conversor de temperatura" -> {
                
                switch(opcion2){
                    case "Celsius" ->{
                        
                        switch(opcion3){
                            case "Fahrenheit" ->{
                                try {
                                    valor = Double.parseDouble(jTextField1.getText());
                                    bandera = "continuar";
                                }catch(NumberFormatException ex) {	
                                    JOptionPane.showMessageDialog(null, "Por favor ingrese datos validos", "alert", JOptionPane.ERROR_MESSAGE);
                                    jTextField1.setText(null);
                                    jTextField1.requestFocus();           
                                    bandera = "repite";
                                }
                                if("continuar".equals(bandera)){
                                    Component frame = null;
                                    JOptionPane.showInternalMessageDialog(frame,  valor +"° Celsius equivale a " + uno.celsiusFahrenheit(valor) + "° Fahrenheit" ,
                                    "information", JOptionPane.INFORMATION_MESSAGE);

                                    int aux = JOptionPane.showInternalConfirmDialog(frame,"¿Desea continuar usando el conversor?", "information",
                                    JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);

                                if(aux == 1 || aux == 2 ) {
                                        JOptionPane.showInternalMessageDialog(frame, "Programa finalizado",
                                                "information", JOptionPane.INFORMATION_MESSAGE);
                                        System.exit(0); 	
                                    }else{
                                        jTextField1.setText(null);
                                        jTextField1.requestFocus(); 
                                    }   
                                }
                                break;
                            }
                            
                            case "Kelvin" ->{
                                try {
                                    valor = Double.parseDouble(jTextField1.getText());
                                    bandera = "continuar";
                                }catch(NumberFormatException ex) {	
                                    JOptionPane.showMessageDialog(null, "Por favor ingrese datos validos", "alert", JOptionPane.ERROR_MESSAGE);
                                    jTextField1.setText(null);
                                    jTextField1.requestFocus();           
                                    bandera = "repite";
                                }
                                if("continuar".equals(bandera)){
                                    Component frame = null;
                                    JOptionPane.showInternalMessageDialog(frame,  valor +"° Celsius equivale a " + uno.celsiusKelvin(valor) + " K" ,
                                    "information", JOptionPane.INFORMATION_MESSAGE);

                                    int aux = JOptionPane.showInternalConfirmDialog(frame,"¿Desea continuar usando el conversor?", "information",
                                    JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);

                                if(aux == 1 || aux == 2 ) {
                                        JOptionPane.showInternalMessageDialog(frame, "Programa finalizado",
                                                "information", JOptionPane.INFORMATION_MESSAGE);
                                        System.exit(0); 	
                                    }else{
                                        jTextField1.setText(null);
                                        jTextField1.requestFocus(); 
                                    }   
                                }
                                break;
                            }
                        }
                        break;
                    }
                    case "Fahrenheit" -> {
                        
                        switch(opcion3){
                            case "Celsius" ->{
                                try {
                                    valor = Double.parseDouble(jTextField1.getText());
                                    bandera = "continuar";
                                }catch(NumberFormatException ex) {	
                                    JOptionPane.showMessageDialog(null, "Por favor ingrese datos validos", "alert", JOptionPane.ERROR_MESSAGE);
                                    jTextField1.setText(null);
                                    jTextField1.requestFocus();           
                                    bandera = "repite";
                                }
                                if("continuar".equals(bandera)){
                                    Component frame = null;
                                    JOptionPane.showInternalMessageDialog(frame,  valor +"° Fahrenheit equivale a " + uno.fahrenheitCelsius(valor) + "° Celsius" ,
                                    "information", JOptionPane.INFORMATION_MESSAGE);

                                    int aux = JOptionPane.showInternalConfirmDialog(frame,"¿Desea continuar usando el conversor?", "information",
                                    JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);

                                    if(aux == 1 || aux == 2 ) {
                                        JOptionPane.showInternalMessageDialog(frame, "Programa finalizado",
                                                "information", JOptionPane.INFORMATION_MESSAGE);
                                        System.exit(0); 	
                                    }else{
                                        jTextField1.setText(null);
                                        jTextField1.requestFocus(); 
                                    }   
                                }
                                break;
                            }
                            
                            case "Kelvin" -> {
                                try {
                                    valor = Double.parseDouble(jTextField1.getText());
                                    bandera = "continuar";
                                }catch(NumberFormatException ex) {	
                                    JOptionPane.showMessageDialog(null, "Por favor ingrese datos validos", "alert", JOptionPane.ERROR_MESSAGE);
                                    jTextField1.setText(null);
                                    jTextField1.requestFocus();           
                                    bandera = "repite";
                                }
                                if("continuar".equals(bandera)){
                                    Component frame = null;
                                    JOptionPane.showInternalMessageDialog(frame,  valor +"° Fahrenheit equivale a " + uno.fahrenheitKelvin(valor) + " K" ,
                                    "information", JOptionPane.INFORMATION_MESSAGE);

                                    int aux = JOptionPane.showInternalConfirmDialog(frame,"¿Desea continuar usando el conversor?", "information",
                                            JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);

                                    if(aux == 1 || aux == 2 ) {
                                        JOptionPane.showInternalMessageDialog(frame, "Programa finalizado",
                                                "information", JOptionPane.INFORMATION_MESSAGE);
                                        System.exit(0); 	
                                    }else{
                                        jTextField1.setText(null);
                                        jTextField1.requestFocus(); 
                                    }   
                                }
                                break;
                            }
                        }
                            
                    }
                    case "Kelvin" -> {
                        
                        switch(opcion3){
                            case "Celsius" ->{
                                try {
                                    valor = Double.parseDouble(jTextField1.getText());
                                    bandera = "continuar";
                                }catch(NumberFormatException ex) {	
                                    JOptionPane.showMessageDialog(null, "Por favor ingrese datos validos", "alert", JOptionPane.ERROR_MESSAGE);
                                    jTextField1.setText(null);
                                    jTextField1.requestFocus();           
                                    bandera = "repite";
                                }
                                if("continuar".equals(bandera)){
                                    Component frame = null;
                                    JOptionPane.showInternalMessageDialog(frame,  valor +" K equivale a " + uno.kelvinCelsius(valor) + "° Celsius" ,
                                    "information", JOptionPane.INFORMATION_MESSAGE);

                                    int aux = JOptionPane.showInternalConfirmDialog(frame,"¿Desea continuar usando el conversor?", "information",
                                            JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);

                                    if(aux == 1 || aux == 2 ) {
                                        JOptionPane.showInternalMessageDialog(frame, "Programa finalizado",
                                                "information", JOptionPane.INFORMATION_MESSAGE);
                                        System.exit(0); 	
                                    }else{
                                        jTextField1.setText(null);
                                        jTextField1.requestFocus(); 
                                    }   
                                }
                                break;
                            }
                            
                            case "Fahrenheit" -> {
                                try {
                                    valor = Double.parseDouble(jTextField1.getText());
                                    bandera = "continuar";
                                }catch(NumberFormatException ex) {	
                                    JOptionPane.showMessageDialog(null, "Por favor ingrese datos validos", "alert", JOptionPane.ERROR_MESSAGE);
                                    jTextField1.setText(null);
                                    jTextField1.requestFocus();           
                                    bandera = "repite";
                                }
                                if("continuar".equals(bandera)){
                                    Component frame = null;
                                    JOptionPane.showInternalMessageDialog(frame,  valor +" K equivale a " + uno.kelvinFahrenheit(valor) + "° Fahrenheit" ,
                                    "information", JOptionPane.INFORMATION_MESSAGE);

                                    int aux = JOptionPane.showInternalConfirmDialog(frame,"¿Desea continuar usando el conversor?", "information",
                                            JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);

                                    if(aux == 1 || aux == 2 ) {
                                        JOptionPane.showInternalMessageDialog(frame, "Programa finalizado",
                                                "information", JOptionPane.INFORMATION_MESSAGE);
                                        System.exit(0); 	
                                    }else{
                                        jTextField1.setText(null);
                                        jTextField1.requestFocus(); 
                                    }   
                                }
                                break;
                            }
                        }
                        break;
                    }                  
                }
                break;
            }     
        }                                             
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseClicked
        // CUADRO DE TEXTO
        jTextField1.setText(null);
    }//GEN-LAST:event_jTextField1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // BOTON CANCELAR
        jTextField1.setText(null);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConversorOne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConversorOne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConversorOne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConversorOne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConversorOne().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
